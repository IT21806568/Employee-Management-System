{"ast":null,"code":"var _jsxFileName = \"/Users/thisunsatharasinghe/Desktop/second year project/employee-system/src/SubmissionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SubmissionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmissionPage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [dueTime, setDueTime] = useState(new Date(\"2023-08-31T23:59:59\")); // Example due time\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      // Simulate file upload progress for demonstration purposes\n      const interval = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress < 100) {\n            return prevProgress + 10;\n          } else {\n            clearInterval(interval);\n            return prevProgress;\n          }\n        });\n      }, 1000);\n\n      // In a real application, you would use APIs to upload the file to your server\n      // and handle the progress and response accordingly.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submission-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit Your Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Due Time: \", dueTime.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Uploading: \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmissionPage, \"NfGW3MABq2Ut/V18822DOqpXd1w=\");\n_c = SubmissionPage;\nexport default SubmissionPage;\nvar _c;\n$RefreshReg$(_c, \"SubmissionPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SubmissionPage","_s","selectedFile","setSelectedFile","progress","setProgress","dueTime","setDueTime","Date","handleFileChange","event","file","target","files","handleFileUpload","interval","setInterval","prevProgress","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/thisunsatharasinghe/Desktop/second year project/employee-system/src/SubmissionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SubmissionPage.css';\n\nconst SubmissionPage = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [dueTime, setDueTime] = useState(new Date(\"2023-08-31T23:59:59\")); // Example due time\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      // Simulate file upload progress for demonstration purposes\n      const interval = setInterval(() => {\n        setProgress((prevProgress) => {\n          if (prevProgress < 100) {\n            return prevProgress + 10;\n          } else {\n            clearInterval(interval);\n            return prevProgress;\n          }\n        });\n      }, 1000);\n      \n      // In a real application, you would use APIs to upload the file to your server\n      // and handle the progress and response accordingly.\n    }\n  };\n\n  return (\n    <div className=\"submission-container\">\n      <h1>Submit Your Project</h1>\n      <p>Due Time: {dueTime.toLocaleString()}</p>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleFileUpload}>Upload</button>\n      {progress > 0 && <p>Uploading: {progress}%</p>}\n    </div>\n  );\n};\n\nexport default SubmissionPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;;EAEzE,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCV,eAAe,CAACQ,IAAI,CAAC;EACvB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIZ,YAAY,EAAE;MAChB;MACA,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCX,WAAW,CAAEY,YAAY,IAAK;UAC5B,IAAIA,YAAY,GAAG,GAAG,EAAE;YACtB,OAAOA,YAAY,GAAG,EAAE;UAC1B,CAAC,MAAM;YACLC,aAAa,CAACH,QAAQ,CAAC;YACvB,OAAOE,YAAY;UACrB;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;;MAER;MACA;IACF;EACF,CAAC;;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCrB,OAAA;MAAAqB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzB,OAAA;MAAAqB,QAAA,GAAG,YAAU,EAACd,OAAO,CAACmB,cAAc,CAAC,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CzB,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAElB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDzB,OAAA;MAAQ6B,OAAO,EAAEd,gBAAiB;MAAAM,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDpB,QAAQ,GAAG,CAAC,iBAAIL,OAAA;MAAAqB,QAAA,GAAG,aAAW,EAAChB,QAAQ,EAAC,GAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtCID,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}